; ----------------------------- INCLUDES ----------------------------- 
(include "./profile/profile.yuck")

; ----------------------------- WINDOW ----------------------------- 
(defwindow topbar
  :monitor '["DP-1", "DVI-D-1"]'
  :geometry (geometry :x "0%"
              :y "5px"
              :width "98%"
              :height "40px"
              :anchor "top center")
  :stacking "fg"
  :exclusive true
  (box :orientation "horizontal"
    (left)
    (center)
    (right)
  )
)

; -----------------------------  WIDGETS ----------------------------- 
(defwidget left []
  (box :orientation "horizontal" :halign "center" :class "module" :spacing 20
    (workspaces)))

(defwidget workspaces []
  (box :class "workspaces"
    :orientation "h"
    :halign "start"
    :valign "center"
    :spacing 10
    (button :onclick "hyprctl dispatch workspace 1" 1)
    (button :onclick "hyprctl dispatch workspace 2" 2)
    (button :onclick "hyprctl dispatch workspace 3" 3)
    (button :onclick "hyprctl dispatch workspace 4" 4)
    (button :onclick "hyprctl dispatch workspace 5" 5)
    (button :onclick "hyprctl dispatch workspace 6" 6)
    (button :onclick "hyprctl dispatch workspace 7" 7)
    (button :onclick "hyprctl dispatch workspace 8" 8)
    (button :onclick "hyprctl dispatch workspace 9" 9)))

(defwidget center []
  (box :orientation "horizontal" :halign "center" :class "module" 
    (button :onclick "${EWW_CMD} update -c ${EWW_CONFIG_DIR} cava-visible=${!cava-visible}" 
      {music-status == "Playing" && cava-visible ? cava : time})))

(defwidget right []
  (box :orientation "horizontal" :halign "center" :class "module" 
    (systray :orentation "h" :spacing 10 :prepend-new true)))

; -----------------------------  VARIABLES ----------------------------- 
(defvar separator "ðŸ¡˜")

(defpoll time :interval "1s" :initial "initial-value"
  "date")

(deflisten cava :initial "whatever" `playerctl --follow metadata --format '{{artist}} -> "{{title}}"'`)

(defpoll music-status :interval "1s" :initial "initial-value"
  "playerctl status")

(defvar cava-visible true)
